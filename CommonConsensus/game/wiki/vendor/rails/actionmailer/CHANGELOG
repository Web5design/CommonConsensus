*1.0.1* (11 July, 2005)

* Bind to Action Pack 1.9.1


*1.0.0* (6 July, 2005)

* Avoid adding nil header values #1392

* Better multipart support with implicit multipart/alternative and sorting of subparts [John Long]

* Allow for nested parts in multipart mails #1570 [Flurin Egger]

* Normalize line endings in outgoing mail bodies to "\n" #1536 [John Long]

* Allow template to be explicitly specified #1448 [tuxie@dekadance.se]

* Allow specific "multipart/xxx" content-type to be set on multipart messages #1412 [Flurin Egger]

* Unquoted @ characters in headers are now accepted in spite of RFC 822 #1206

* Helper support (borrowed from ActionPack)

* Silently ignore Errno::EINVAL errors when converting text.

* Don't cause an error when parsing an encoded attachment name #1340 [lon@speedymac.com]

* Nested multipart message parts are correctly processed in TMail::Mail#body

* BCC headers are removed when sending via SMTP #1402

* Added 'content_type' accessor, to allow content type to be set on a per-message basis. content_type defaults to "text/plain".

* Silently ignore Iconv::IllegalSequence errors when converting text #1341 [lon@speedymac.com]

* Support attachments and multipart messages.

* Added new accessors for the various mail properties.

* Fix to only perform the charset conversion if a 'from' and a 'to' charset are given (make no assumptions about what the charset was) #1276 [Jamis Buck]

* Fix attachments and content-type problems #1276 [Jamis Buck]

* Fixed the TMail#body method to look at the content-transfer-encoding header and unquote the body according to the rules it specifies #1265 [Jamis Buck]

* Added unquoting even if the iconv lib can't be loaded--in that case, only the charset conversion is skipped #1265 [Jamis Buck]

* Added automatic decoding of base64 bodies #1214 [Jamis Buck]

* Added that delivery errors are caught in a way so the mail is still returned whether the delivery was successful or not

* Fixed that email address like "Jamis Buck, M.D." <wild.medicine@example.net> would cause the quoter to generate emails resulting in "bad address" errors from the mail server #1220 [Jamis Buck]


*0.9.1* (20th April, 2005)

* Depend on Action Pack 1.8.1


*0.9.0* (19th April, 2005)

* Added that deliver_* will now return the email that was sent

* Added that quoting to UTF-8 only happens if the characters used are in that range #955 [Jamis Buck] 

* Fixed quoting for all address headers, not just to #955 [Jamis Buck]

* Fixed unquoting of emails that doesn't have an explicit charset #1036 [wolfgang@stufenlos.net]


*0.8.1* (27th March, 2005)

* Fixed that if charset was found that the end of a mime part declaration TMail would throw an error #919 [lon@speedymac.com]

* Fixed that TMail::Unquoter would fail to recognize quoting method if it was in lowercase #919 [lon@speedymac.com]

* Fixed that TMail::Encoder would fail when it attempts to parse e-mail addresses which are encoded using something other than the messages encoding method #919 [lon@speedymac.com]

* Added rescue for missing iconv library and throws warnings if subject/body is called on a TMail object without it instead


*0.8.0* (22th March, 2005)

* Added framework support for processing incoming emails with an Action Mailer class. See example in README.


*0.7.1* (7th March, 2005)

* Bind to newest Action Pack (1.5.1)


*0.7.0* (24th February, 2005)

* Added support for charsets for both subject and body. The default charset is now UTF-8 #673 [Jamis Buck]. Examples:

    def iso_charset(recipient)
      @recipients = recipient
      @subject    = "testing iso charsets"
      @from       = "system@loudthinking.com"
      @body       = "Nothing to see here."
      @charset    = "iso-8859-1"
    end
    
    def unencoded_subject(recipient)
      @recipients = recipient
      @subject    = "testing unencoded subject"
      @from       = "system@loudthinking.com"
      @body       = "Nothing to see here."
      @encode_subject = false
      @charset    = "iso-8859-1"
    end
    

*0.6.1* (January 18th, 2005)

* Fixed sending of emails to use Tmail#from not the deprecated Tmail#from_address


*0.6* (January 17th, 2005)

* Fixed that bcc and cc should be settable through @bcc and @cc -- not just @headers["Bcc"] and @headers["Cc"] #453 [Eric Hodel]

* Fixed Action Mailer to be "warnings safe" so you can run with ruby -w and not get framework warnings #453 [Eric Hodel]


*0.5*

* Added access to custom headers, like cc, bcc, and reply-to #268 [Andreas Schwarz]. Example:

    def post_notification(recipients, post)
      @recipients          = recipients
      @from                = post.author.email_address_with_name
      @headers["bcc"]      = SYSTEM_ADMINISTRATOR_EMAIL
      @headers["reply-to"] = "notifications@example.com"
      @subject             = "[#{post.account.name} #{post.title}]"
      @body["post"]        = post
    end

*0.4* (5)

* Consolidated the server configuration options into Base#server_settings= and expanded that with controls for authentication and more [Marten]
  NOTE: This is an API change that could potentially break your application if you used the old application form. Please do change!

* Added Base#deliveries as an accessor for an array of emails sent out through that ActionMailer class when using the :test delivery option. [Jeremy Kemper]

* Added Base#perform_deliveries= which can be set to false to turn off the actual delivery of the email through smtp or sendmail.
  This is especially useful for functional testing that shouldn't send off real emails, but still trigger delivery_* methods.

* Added option to specify delivery method with Base#delivery_method=. Default is :smtp and :sendmail is currently the only other option.
  Sendmail is assumed to be present at "/usr/sbin/sendmail" if that option is used. [Kent Sibilev]

* Dropped "include TMail" as it added to much baggage into the default namespace (like Version) [Chad Fowler]


*0.3*

* First release
